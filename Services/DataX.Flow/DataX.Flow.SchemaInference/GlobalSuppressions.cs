
// This file is used by Code Analysis to maintain SuppressMessage 
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given 
// a specific target and scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1051:Do not declare visible instance fields", Justification = "Critical issues only", Scope = "member", Target = "~F:DataX.Flow.SchemaInference.EventsData.Events")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1051:Do not declare visible instance fields", Justification = "Critical issues only", Scope = "member", Target = "~F:DataX.Flow.SchemaInference.EventsData.EventsJson")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1304:The behavior of 'string.ToLower()' could vary based on the current user's locale settings. Replace this call in 'Engine.GetObjectType(JToken)' with a call to 'string.ToLower(CultureInfo)'.", Justification = "Critical issues only", Scope = "member", Target = "~M:DataX.Flow.SchemaInference.Engine.GetObjectType(Newtonsoft.Json.Linq.JToken)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1822:Member GetObjectType does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "Critical issues only", Scope = "member", Target = "~M:DataX.Flow.SchemaInference.Engine.GetObjectType(Newtonsoft.Json.Linq.JToken)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Contains(string)' could vary based on the current user's locale settings. Replace this call in 'DataX.Flow.SchemaInference.Engine.GetSchemaArray(Newtonsoft.Json.Linq.JArray, DataX.Flow.SchemaInference.Type, string)' with a call to 'string.Contains(string, System.StringComparison)'.", Justification = "Critical issues only", Scope = "member", Target = "~M:DataX.Flow.SchemaInference.Engine.GetSchemaArray(Newtonsoft.Json.Linq.JArray,DataX.Flow.SchemaInference.Type,System.String)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1304:The behavior of 'string.ToLower()' could vary based on the current user's locale settings. Replace this call in 'Engine.GetSchemaArray(JArray, Type, string)' with a call to 'string.ToLower(CultureInfo)'.", Justification = "Critical issues only", Scope = "member", Target = "~M:DataX.Flow.SchemaInference.Engine.GetSchemaArray(Newtonsoft.Json.Linq.JArray,DataX.Flow.SchemaInference.Type,System.String)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Contains(string)' could vary based on the current user's locale settings. Replace this call in 'DataX.Flow.SchemaInference.Engine.GetSchemaStruct(Newtonsoft.Json.Linq.JObject, DataX.Flow.SchemaInference.StructObject, string)' with a call to 'string.Contains(string, System.StringComparison)'.", Justification = "Critical issues only", Scope = "member", Target = "~M:DataX.Flow.SchemaInference.Engine.GetSchemaStruct(Newtonsoft.Json.Linq.JObject,DataX.Flow.SchemaInference.StructObject,System.String)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.ToString()' could vary based on the current user's locale settings. Replace this call in 'Engine.GetSchemaStruct(JObject, StructObject, string)' with a call to 'string.ToString(IFormatProvider)'.", Justification = "Critical issues only", Scope = "member", Target = "~M:DataX.Flow.SchemaInference.Engine.GetSchemaStruct(Newtonsoft.Json.Linq.JObject,DataX.Flow.SchemaInference.StructObject,System.String)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'DateTime.ToString()' could vary based on the current user's locale settings. Replace this call in 'EventProcessor.ProcessEventsAsync(PartitionContext, IEnumerable<EventData>)' with a call to 'DateTime.ToString(IFormatProvider)'.", Justification = "Critical issues only", Scope = "member", Target = "~M:DataX.Flow.SchemaInference.EventProcessor.ProcessEventsAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.Azure.EventHubs.EventData})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Do not directly await a Task without calling ConfigureAwait", Justification = "Critical issues only", Scope = "member", Target = "~M:DataX.Flow.SchemaInference.SchemaGenerator.GetSampleEvents(System.Int32)~System.Threading.Tasks.Task{DataX.Flow.SchemaInference.EventsData}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Do not directly await a Task without calling ConfigureAwait", Justification = "Critical issues only", Scope = "member", Target = "~M:DataX.Flow.SchemaInference.SchemaGenerator.GetSchemaAsync(System.String,System.String,System.String,System.String,System.Int32)~System.Threading.Tasks.Task{DataX.Flow.SchemaInference.SchemaResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1822:Member GetSchemaHelper does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "Critical issues only", Scope = "member", Target = "~M:DataX.Flow.SchemaInference.SchemaGenerator.GetSchemaHelper(System.Collections.Generic.List{DataX.Flow.SchemaInference.EventRaw})~DataX.Flow.SchemaInference.SchemaResult")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Do not directly await a Task without calling ConfigureAwait", Justification = "Critical issues only", Scope = "member", Target = "~M:DataX.Flow.SchemaInference.SchemaGenerator.RefreshSample(System.String,System.String,System.String,System.String,System.Int32)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Do not directly await a Task without calling ConfigureAwait", Justification = "Critical issues only", Scope = "member", Target = "~M:DataX.Flow.SchemaInference.SchemaInferenceManager.GetInputSchema(Newtonsoft.Json.Linq.JObject)~System.Threading.Tasks.Task{DataX.Contract.ApiResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Do not directly await a Task without calling ConfigureAwait", Justification = "Critical issues only", Scope = "member", Target = "~M:DataX.Flow.SchemaInference.SchemaInferenceManager.RefreshSample(Newtonsoft.Json.Linq.JObject)~System.Threading.Tasks.Task{DataX.Contract.ApiResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2227:Change 'Properties' to be read-only by removing the property setter.", Justification = "Critical issues only", Scope = "member", Target = "~P:DataX.Flow.SchemaInference.EventRaw.Properties")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2227:Change 'SystemProperties' to be read-only by removing the property setter.", Justification = "Critical issues only", Scope = "member", Target = "~P:DataX.Flow.SchemaInference.EventRaw.SystemProperties")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2227:Change 'Errors' to be read-only by removing the property setter.", Justification = "Critical issues only", Scope = "member", Target = "~P:DataX.Flow.SchemaInference.SchemaResult.Errors")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2227:Change 'fields' to be read-only by removing the property setter.", Justification = "Critical issues only", Scope = "member", Target = "~P:DataX.Flow.SchemaInference.StructObject.fields")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1724:The type name Metadata conflicts in whole or in part with the namespace name 'System.Runtime.Remoting.Metadata' defined in the .NET Framework. Rename the type to eliminate the conflict.", Justification = "Critical issues only", Scope = "type", Target = "~T:DataX.Flow.SchemaInference.Metadata")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "Critical issues only", Scope = "member", Target = "~F:DataX.Flow.SchemaInference.Kafka.KafkaMessageBus._cacertLocation")]
